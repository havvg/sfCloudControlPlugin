h1. Installation

There is little configuration required in order to get this plugin working.
To install the plugin, you only have to enable it in your ProjectConfiguration.

h2. Dependencies

h3. Required PHP extensions

* imap
* pcntl

h3. Required PEAR packages for phpcclib (PHP cloudControl library)

* pear config-set preferred_state alpha
* pear install HTTP_Request2

h3. Optional PHP extensions

* memcached (required by sfMemcachedSaslCache)

h2. CloudControl configuration

In order to have the cloudControl API working, you need to configure the following four items in your app.yml.

* cloudcontrol_application
* cloudcontrol_deployment
* cloudcontrol_email
* cloudcontrol_password

h2. Available modules

h3. sfCCCrontab

This module is a generated admin module for backend purposes. Enable this module only on a secure environment, as it provides mechanism to add workers on your cloudControl account. As a precaution this module is set to be secure. To override this, add a security.yml to your application settings e.g. app/backend/modules/sfCCCrontab/config/security.yml.

h2. Avaiable libraries

h3. sfMemcachedSaslCache

The sfMemcachedSaslCache supports the authentication of memcached on the cloudControl platform. It checks for required authentication and the existing method.

An example configuration for the routing cache without any authentication:

<pre>
  routing:
    class: sfPatternRouting
    param:
      generate_shortest_url:            true
      extra_parameters_as_query_string: true
      debug: false
      cache:
        class: sfMemcachedSaslCache
        param: []
</pre>

An example configuration leveraging the patched version of cloudControl including SASL.

<pre>
  routing:
    class: sfPatternRouting
    param:
      generate_shortest_url:            true
      extra_parameters_as_query_string: true
      debug: false
      cache:
        class: sfMemcachedSaslCache
        param:
          host: 127.0.0.1
          port: 11211
          username: yourusername
          password: yours3cr3tpassword
</pre>

h1. Testing in your environment

h2. Dependencies

In order to be able to run the tests, the sfPHPUnit2Plugin is required. This implies the requirement of PHPUnit itself.

h2. Running the tests

If you want to run the tests of provided, drop the plugin into your projects plugin directory. Afterwards point your command line to the root directory of this plugin and execute PHPUnit. To adjust settings, overwrite the distributed phpunit.xml.dist by creating a phpunit.xml file.

h1. Upgrading

See UPGRADE.textile for more information on how to upgrade this plugin.